var _user$project$ModelUtils$getHotelFormattedDuration = function (hotel) {
	return A2(
		_elm_lang$core$Basics_ops['++'],
		'Тривалість: ',
		A2(
			_elm_lang$core$Basics_ops['++'],
			_elm_lang$core$Basics$toString(hotel.duration),
			A2(
				_elm_lang$core$Basics_ops['++'],
				' ',
				function () {
					var _p0 = hotel.duration;
					if (_p0 === 4) {
						return 'дні';
					} else {
						return 'днів';
					}
				}())));
};
var _user$project$ModelUtils$getHotelMinPrice = function (hotel) {
	return A2(
		_elm_lang$core$Maybe$withDefault,
		-1,
		_elm_lang$core$List$minimum(
			A2(
				_elm_lang$core$List$map,
				function (_) {
					return _.price;
				},
				hotel.priceOptions)));
};
var _user$project$ModelUtils$negateSortOrder = function (ord) {
	var _p1 = ord;
	if (_p1.ctor === 'Asc') {
		return _user$project$Models$Desc;
	} else {
		return _user$project$Models$Asc;
	}
};
var _user$project$ModelUtils$sortingOrderLabel = function (ord) {
	var _p2 = ord;
	if (_p2.ctor === 'Asc') {
		return '▲';
	} else {
		return '▼';
	}
};
var _user$project$ModelUtils$sortingOptionLabel = function (opt) {
	var _p3 = opt;
	switch (_p3.ctor) {
		case 'Popularity':
			return 'Популярністю';
		case 'Stars':
			return 'Кількістю зірок';
		case 'Price':
			return 'Ціною';
		default:
			return 'Датою відправлення';
	}
};
var _user$project$ModelUtils$filteredHotels = function (model) {
	return function () {
		var _p4 = model.appState.currentFilterByCountry;
		if (_p4.ctor === 'Just') {
			return _elm_lang$core$List$filter(
				function (hotel) {
					return _elm_lang$core$Native_Utils.eq(hotel.countryId, _p4._0.id);
				});
		} else {
			return _elm_lang$core$Basics$identity;
		}
	}()(model.appContent.hotels);
};
var _user$project$ModelUtils$hotelsPerPage = 4;
var _user$project$ModelUtils$pagesCount = function (model) {
	return _elm_lang$core$Basics$ceiling(
		_elm_lang$core$Basics$toFloat(
			_elm_lang$core$List$length(
				_user$project$ModelUtils$filteredHotels(model))) / _elm_lang$core$Basics$toFloat(_user$project$ModelUtils$hotelsPerPage));
};
var _user$project$ModelUtils$getHotelsOnCurrentPage = function (model) {
	return A2(
		_elm_lang$core$List$take,
		_user$project$ModelUtils$hotelsPerPage,
		A2(
			_elm_lang$core$List$drop,
			_user$project$ModelUtils$hotelsPerPage * (model.appState.currentPage - 1),
			function (_p5) {
				return function () {
					var _p6 = model.appState.currentSortOrder;
					if (_p6.ctor === 'Asc') {
						return _elm_lang$core$Basics$identity;
					} else {
						return _elm_lang$core$List$reverse;
					}
				}()(
					function () {
						var _p7 = model.appState.currentSortOption;
						switch (_p7.ctor) {
							case 'Popularity':
								return _elm_lang$core$List$sortBy(
									function (_) {
										return _.popularity;
									});
							case 'Stars':
								return _elm_lang$core$List$sortBy(
									function (_) {
										return _.stars;
									});
							case 'Price':
								return _elm_lang$core$List$sortBy(_user$project$ModelUtils$getHotelMinPrice);
							default:
								return _elm_lang$core$List$sortBy(
									function (hotel) {
										var _p9 = A2(
											_elm_lang$core$List$map,
											function (_p8) {
												return A2(
													_elm_lang$core$Maybe$withDefault,
													-1,
													_elm_lang$core$Result$toMaybe(
														_elm_lang$core$String$toInt(_p8)));
											},
											A2(_elm_lang$core$String$split, '.', hotel.depart));
										if ((((_p9.ctor === '::') && (_p9._1.ctor === '::')) && (_p9._1._1.ctor === '::')) && (_p9._1._1._1.ctor === '[]')) {
											return (_p9._0 + (_p9._1._0 * 31)) + ((_p9._1._1._0 * 31) * 366);
										} else {
											return -1;
										}
									});
						}
					}()(_p5));
			}(
				_user$project$ModelUtils$filteredHotels(model))));
};
